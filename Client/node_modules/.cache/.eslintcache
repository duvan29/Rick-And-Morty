[{"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\index.js":"1","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\App.js":"2","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\redux\\store\\store.js":"3","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Cards\\Cards.jsx":"4","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Nav\\Nav.jsx":"5","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\redux\\actions\\actions.js":"6","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Error\\Error.jsx":"7","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\About\\About.jsx":"8","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Detail\\Detail.jsx":"9","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Form\\Form.jsx":"10","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Favorites\\Favorites.jsx":"11","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Search\\SearchBar.jsx":"12","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\redux\\reducer\\reducer.js":"13","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\redux\\actions\\types.js":"14","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\validation.js":"15","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Card\\Card.jsx":"16"},{"size":404,"mtime":1680225212169,"results":"17","hashOfConfig":"18"},{"size":4485,"mtime":1681323721271,"results":"19","hashOfConfig":"18"},{"size":487,"mtime":1679702462621,"results":"20","hashOfConfig":"18"},{"size":726,"mtime":1680053684252,"results":"21","hashOfConfig":"18"},{"size":2863,"mtime":1681447963098,"results":"22","hashOfConfig":"18"},{"size":1920,"mtime":1681325843399,"results":"23","hashOfConfig":"18"},{"size":245,"mtime":1679532385774,"results":"24","hashOfConfig":"18"},{"size":4776,"mtime":1681478553964,"results":"25","hashOfConfig":"18"},{"size":1747,"mtime":1681503596544,"results":"26","hashOfConfig":"18"},{"size":3337,"mtime":1680227936769,"results":"27","hashOfConfig":"18"},{"size":6663,"mtime":1681512984038,"results":"28","hashOfConfig":"18"},{"size":1570,"mtime":1681320249219,"results":"29","hashOfConfig":"18"},{"size":2251,"mtime":1681351901194,"results":"30","hashOfConfig":"18"},{"size":193,"mtime":1680034248616,"results":"31","hashOfConfig":"18"},{"size":782,"mtime":1679533193894,"results":"32","hashOfConfig":"18"},{"size":2336,"mtime":1681352402795,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"vfaa1d",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"37"},"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\index.js",[],[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\App.js",["87","88","89"],[],"import './App.css';\r\nimport Cards from './components/Cards/Cards.jsx';\r\nimport Nav from './components/Nav/Nav.jsx'\r\nimport About from './components/About/About'\r\nimport Detail from './components/Detail/Detail';\r\nimport Error from './components/Error/Error';\r\nimport Form from './components/Form/Form';\r\nimport Favorites from './components/Favorites/Favorites';\r\nimport SearchBar from './components/Search/SearchBar';\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react';\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { removeFav } from './redux/actions/actions';\r\n\r\n\r\nexport function App({ removeFav }) {\r\n\r\n   const [characters, setCharacters] = useState([]);\r\n   const navigate = useNavigate();\r\n   const [access, setAccess] = useState(false);\r\n   const EMAIL = 'duvan123@gmail.com';\r\n   const PASSWORD = 'duvan123';\r\n\r\n   const onSearch = async (id) => {\r\n      \r\n      try {\r\n         const { data } = await axios(`http://localhost:3001/rickandmorty/character/${id}`)\r\n         if (data.name) {\r\n            if(characters.find(character => character.id === data.id))\r\n                  window.alert(`ID ${data.id} ya existe`);\r\n            else setCharacters((oldChars) => [...oldChars, data]);\r\n            }\r\n      } catch (error) {\r\n         switch (error.request.status) {\r\n            case 404:\r\n               window.alert('ID vacio');\r\n               break;\r\n            // case 500:\r\n            //    window.alert(`¡No hay personajes con el ID ${id}!`);\r\n            //    break;\r\n            default:\r\n               window.alert(`¡No hay personajes con el ID ${id}!`);\r\n               break;\r\n         }\r\n      }\r\n\r\n      // .then(({ data }) => {\r\n      //    if (data.name) {\r\n            \r\n      //       if(characters.find(character => character.id === data.id))\r\n      //          window.alert(`ID ${data.id} ya existe`);\r\n      //       else setCharacters((oldChars) => [...oldChars, data]);\r\n\r\n      //    } else if (!data.id) window.alert('ID vacio');\r\n      //    else {\r\n      //       window.alert('¡No hay personajes con este ID!');\r\n      //    }\r\n      // }).catch(() => alert(`Character ${id} not found`));\r\n   };\r\n\r\n   const onClose = (id) => {\r\n      setCharacters(characters.filter((char) => char.id!==id));\r\n      removeFav(parseInt(id));\r\n   };\r\n\r\n   const logout = () => {\r\n      setAccess(false);\r\n      navigate(`/`);\r\n   };\r\n\r\n   // const login = (userData) => {\r\n   //    if (userData.password === PASSWORD && userData.email === EMAIL) {\r\n   //       setAccess(true);\r\n   //       navigate('/home');\r\n   //    } else window.alert('El usuario o Constraseña es incorrecta')\r\n   // }\r\n\r\n   // const login = (userData) => {\r\n   //    const { email, password } = userData;\r\n   //    const URL = 'http://localhost:3001/rickandmorty/login/';\r\n   //    axios(URL + `?email=${email}&password=${password}`).then(({ data }) => {\r\n   //       const { access } = data;\r\n   //       setAccess(data);\r\n   //       access && navigate('/home');\r\n   //    });\r\n   // }\r\n\r\n   const login = async (userData) => {\r\n      const { email, password } = userData;\r\n      try {   \r\n         const URL = 'http://localhost:3001/rickandmorty/login/';\r\n         const { data } = await axios(URL + `?email=${email}&password=${password}`);\r\n         const { access } = data;\r\n         setAccess(data);\r\n         access && navigate('/home');\r\n      } catch (error) {\r\n         window.alert('Email or Password incorrect')\r\n      }\r\n   }\r\n\r\n   useEffect(() => {\r\n      !access && navigate('/');\r\n   }, [access]);\r\n\r\n\r\n   return (\r\n      <div className='App'>\r\n      <Nav logout = {logout}/>\r\n      \r\n         <Routes>\r\n            <Route path= \"/\" element= {<Form login={login}/>}/>\r\n            <Route path= \"/home\" element= {<><SearchBar onSearch = {onSearch}/><Cards characters={characters} onClose={onClose}/></>}/>\r\n            <Route path='/about' element={<About/>}/>\r\n            <Route path='/detail/:id' element={<Detail/>}/>\r\n            <Route path='*' element={<Error/>} /> \r\n            <Route path='/favorites' element={<Favorites/>}/>\r\n         </Routes>\r\n      </div>\r\n   );\r\n}\r\n\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n   return {\r\n      removeFav: (id) => dispatch(removeFav(id))\r\n   }\r\n}\r\n\r\nexport function mapStateToProps(state) {\r\n   return {\r\n      myFavorites: state.myFavorites,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\redux\\store\\store.js",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Cards\\Cards.jsx",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Nav\\Nav.jsx",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\redux\\actions\\actions.js",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Error\\Error.jsx",["90"],[],"import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Error = () => {\r\n\r\n    return (\r\n      <div>\r\n        <h1>404</h1>\r\n        <h3>Page No Found</h3>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default Error;\r\n","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\About\\About.jsx",["91","92"],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Detail\\Detail.jsx",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Form\\Form.jsx",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Favorites\\Favorites.jsx",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Search\\SearchBar.jsx",["93","94","95","96"],[],"import { useState } from 'react';\r\nimport style from './SearchBar.module.css'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faHeart, faChevronUp, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function SearchBar({onSearch}) {\r\n\r\nlet [id, idSet] = useState(\"\");\r\n\r\nconst handleChange = (event) => idSet(event.target.value)\r\n\r\nconst location = useLocation();\r\n\r\n  // Si la ruta actual es '/', no mostramos la barra de navegación\r\n//   if (location.pathname === \"/about\" || location.pathname === '/' || location.pathname === '/favorites') {\r\n//     return null;\r\n//   }\r\n\r\n   return (\r\n      <div> \r\n            <div className={style.search}>\r\n               <input type='search' value={id} placeholder='Ex... 159'  onChange={handleChange}/>\r\n               <div className={style.buscarButton} onClick={() => {onSearch(id); idSet(\"\")}}>\r\n                  <FontAwesomeIcon icon={faMagnifyingGlass}/>\r\n               </div>\r\n            </div>\r\n\r\n         <br></br>\r\n            <div className={style.wrapper}>\r\n\r\n               <div className={style.iconRandom}>\r\n                  <div className={style.tooltip}>\r\n                     Random\r\n                  </div>\r\n                  <div className={style.randomButonIcon}  onClick={() => onSearch(Math.floor(Math.random() * 826))}>\r\n                     <FontAwesomeIcon icon={faQuestion}/>\r\n                  </div>\r\n               </div> \r\n            </div>   \r\n      </div>\r\n   );\r\n}\r\n","E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\redux\\reducer\\reducer.js",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\redux\\actions\\types.js",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\validation.js",[],[],"E:\\Nueva carpeta\\A. Escritorio\\Henry\\FT-M\\Rick_And_Morty\\rick_and_morty\\Client\\src\\components\\Card\\Card.jsx",["97"],[],"import { Link, useLocation } from 'react-router-dom'\r\nimport { removeFav, addFav } from '../../redux/actions/actions'\r\nimport { connect } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport style from './Card.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faX, faHeart, faIdCard } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport function Card(props) {\r\n   const { pathname } = useLocation();\r\n\r\n   const [isFav, setIsfav] = useState(false);\r\n   \r\n   const handleFavorite = () => {\r\n      if (isFav) {\r\n         setIsfav(false);\r\n         props.removeFav(props.id);\r\n      } else {\r\n         setIsfav(true);\r\n         props.addFav(props);\r\n      }\r\n   };\r\n   \r\n   useEffect(() => {\r\n      props.myFavorites.forEach((fav) => {\r\n         if (fav.id === props.id) {\r\n            setIsfav(true);\r\n         }\r\n      });\r\n   }, [props.myFavorites]);\r\n   \r\n      return (\r\n         <div>\r\n         <div className={style.cardDiv}>\r\n            {isFav ? (<div className={style.divCorazon2} onClick={handleFavorite}><FontAwesomeIcon icon={faHeart}/></div>) : (<div className={style.divCorazon} onClick={handleFavorite}><FontAwesomeIcon icon={faHeart}/>\r\n         </div>)}\r\n         { (pathname !== \"/favorites\") ? (<div className={style.divX}  onClick={() => props.onClose() }><FontAwesomeIcon icon={faX} onClick={props.onClose}/></div>) : (<div className={style.divX2}><FontAwesomeIcon icon={faX}/></div>)}\r\n         <img src={props.image} alt={props.name} className={style.imgCard}/>\r\n\r\n         <div className={style.divCardName}>\r\n            <h2 className={style.cardName}>{props.name}</h2>\r\n         </div>\r\n         \r\n         <h2 className={style.cardID}>{props.id}</h2>\r\n            <Link to = {`/detail/${props.id}`} >\r\n         <div className={style.masInfo}><FontAwesomeIcon icon={faIdCard} /></div>\r\n            </Link>\r\n      </div>\r\n      </div>\r\n      );\r\n   }\r\n   \r\n   export function mapDispatchToProps(dispatch) {\r\n      return {\r\n         addFav: (personaje) => dispatch(addFav(personaje)),\r\n         removeFav: (id) => dispatch(removeFav(id))\r\n      }\r\n   }\r\n   \r\n   export function mapStateToProps(state) {\r\n      return {\r\n         myFavorites: state.allCharacters\r\n      }\r\n   }\r\n   \r\n   export default connect(mapStateToProps, mapDispatchToProps)(Card);",{"ruleId":"98","severity":1,"message":"99","line":22,"column":10,"nodeType":"100","messageId":"101","endLine":22,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":23,"column":10,"nodeType":"100","messageId":"101","endLine":23,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":104,"column":7,"nodeType":"105","endLine":104,"endColumn":15,"suggestions":"106"},{"ruleId":"98","severity":1,"message":"107","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":21},{"ruleId":"98","severity":1,"message":"108","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":25},{"ruleId":"98","severity":1,"message":"109","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":20},{"ruleId":"98","severity":1,"message":"110","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":14},{"ruleId":"98","severity":1,"message":"111","line":5,"column":22,"nodeType":"100","messageId":"101","endLine":5,"endColumn":29},{"ruleId":"98","severity":1,"message":"112","line":5,"column":31,"nodeType":"100","messageId":"101","endLine":5,"endColumn":42},{"ruleId":"98","severity":1,"message":"113","line":13,"column":7,"nodeType":"100","messageId":"101","endLine":13,"endColumn":15},{"ruleId":"103","severity":1,"message":"114","line":31,"column":7,"nodeType":"105","endLine":31,"endColumn":26,"suggestions":"115"},"no-unused-vars","'EMAIL' is assigned a value but never used.","Identifier","unusedVar","'PASSWORD' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'useLocation' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faLinkedIn' is defined but never used.","'Link' is defined but never used.","'faHeart' is defined but never used.","'faChevronUp' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["117"],{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [access, navigate]",{"range":"122","text":"123"},"Update the dependencies array to be: [props.id, props.myFavorites]",{"range":"124","text":"125"},[3589,3597],"[access, navigate]",[889,908],"[props.id, props.myFavorites]"]