{"ast":null,"code":"var _jsxFileName = \"E:\\\\Nueva carpeta\\\\A. Escritorio\\\\Henry\\\\FT-M\\\\Rick_And_Morty\\\\rick_and_morty\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/Nav/Nav.jsx';\nimport About from './components/About/About';\nimport Detail from './components/Detail/Detail';\nimport Error from './components/Error/Error';\nimport Form from './components/Form/Form';\nimport Favorites from './components/Favorites/Favorites';\nimport SearchBar from './components/Search/SearchBar';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { removeFav } from './redux/actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function App(_ref) {\n  _s();\n  let {\n    removeFav\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const navigate = useNavigate();\n  const [access, setAccess] = useState(false);\n  const EMAIL = 'ejemplo@gmail.com';\n  const PASSWORD = 'unaPasswo1';\n  const onSearch = id => {\n    axios(`http://localhost:3001/rickandmorty/character/${id}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      if (data.name) {\n        if (characters.find(character => character.id === data.id)) window.alert(`ID ${data.id} ya existe`);else setCharacters(oldChars => [...oldChars, data]);\n      } else if (!data.id) window.alert('ID vacio');else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    }).catch(() => alert(`Character ${id} not found`));\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(char => char.id !== id));\n    removeFav(parseInt(id));\n  };\n  const logout = () => {\n    setAccess(false);\n    navigate(`/`);\n  };\n  const login = userData => {\n    if (userData.password === PASSWORD && userData.email === EMAIL) {\n      setAccess(true);\n      navigate('/home');\n    } else window.alert('El usuario o Constraseña es incorrecta');\n  };\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n            onSearch: onSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(Cards, {\n            characters: characters,\n            onClose: onClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 80\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"/NHvD1Tb+/wS49Uocw79z5lKapc=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport function mapDispatchToProps(dispatch) {\n  return {\n    removeFav: id => dispatch(removeFav(id))\n  };\n}\nexport function mapStateToProps(state) {\n  return {\n    myFavorites: state.myFavorites\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","Nav","About","Detail","Error","Form","Favorites","SearchBar","axios","useState","useEffect","Routes","Route","useNavigate","connect","removeFav","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_ref","_s","characters","setCharacters","navigate","access","setAccess","EMAIL","PASSWORD","onSearch","id","then","_ref2","data","name","find","character","window","alert","oldChars","catch","onClose","filter","char","parseInt","logout","login","userData","password","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","mapDispatchToProps","dispatch","mapStateToProps","state","myFavorites","$RefreshReg$"],"sources":["E:/Nueva carpeta/A. Escritorio/Henry/FT-M/Rick_And_Morty/rick_and_morty/Client/src/App.js"],"sourcesContent":["import './App.css';\r\nimport Cards from './components/Cards/Cards.jsx';\r\nimport Nav from './components/Nav/Nav.jsx'\r\nimport About from './components/About/About'\r\nimport Detail from './components/Detail/Detail';\r\nimport Error from './components/Error/Error';\r\nimport Form from './components/Form/Form';\r\nimport Favorites from './components/Favorites/Favorites';\r\nimport SearchBar from './components/Search/SearchBar';\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react';\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { removeFav } from './redux/actions/actions';\r\n\r\n\r\nexport function App({ removeFav }) {\r\n\r\n   const [characters, setCharacters] = useState([]);\r\n   const navigate = useNavigate();\r\n   const [access, setAccess] = useState(false);\r\n   const EMAIL = 'ejemplo@gmail.com';\r\n   const PASSWORD = 'unaPasswo1';\r\n\r\n   const onSearch = (id) => {\r\n      \r\n      axios(`http://localhost:3001/rickandmorty/character/${id}`).then(({ data }) => {\r\n         if (data.name) {\r\n            \r\n            if(characters.find(character => character.id === data.id))\r\n               window.alert(`ID ${data.id} ya existe`);\r\n            else setCharacters((oldChars) => [...oldChars, data]);\r\n\r\n         } else if (!data.id) window.alert('ID vacio');\r\n         else {\r\n            window.alert('¡No hay personajes con este ID!');\r\n         }\r\n      }).catch(() => alert(`Character ${id} not found`));\r\n   };\r\n\r\n   const onClose = (id) => {\r\n      setCharacters(characters.filter((char) => char.id!==id));\r\n      removeFav(parseInt(id));\r\n   };\r\n\r\n   const logout = () => {\r\n      setAccess(false);\r\n      navigate(`/`);\r\n   };\r\n\r\n   const login = (userData) => {\r\n      if (userData.password === PASSWORD && userData.email === EMAIL) {\r\n         setAccess(true);\r\n         navigate('/home');\r\n      } else window.alert('El usuario o Constraseña es incorrecta')\r\n   }\r\n\r\n   useEffect(() => {\r\n      !access && navigate('/');\r\n   }, [access]);\r\n\r\n\r\n   return (\r\n      <div className='App'>\r\n      <Nav logout = {logout}/>\r\n      \r\n         <Routes>\r\n            <Route path= \"/\" element= {<Form login={login}/>}/>\r\n            <Route path= \"/home\" element= {<><SearchBar onSearch = {onSearch}/><Cards characters={characters} onClose={onClose}/></>}/>\r\n            <Route path='/about' element={<About/>}/>\r\n            <Route path='/detail/:id' element={<Detail/>}/>\r\n            <Route path='*' element={<Error/>} /> \r\n            <Route path='/favorites' element={<Favorites/>}/>\r\n         </Routes>\r\n      </div>\r\n   );\r\n}\r\n\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n   return {\r\n      removeFav: (id) => dispatch(removeFav(id))\r\n   }\r\n}\r\n\r\nexport function mapStateToProps(state) {\r\n   return {\r\n      myFavorites: state.myFavorites,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}