{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from '../actions/types';\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    // case ADD_FAV:\n    //    return {\n    //         ...state,\n    //         myFavorites: [...state.allCharacters, action.payload],\n    //         allCharacters: [...state.myFavorites, action.payload]\n    //    }\n\n    // REDUCER | ADD_FAV\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n\n    // case REMOVE_FAV:\n    //     const newList = state.myFavorites.filter((elemento) => elemento.id !== action.payload);\n    //     return {\n    //         ...state,\n    //         myFavorites: newList\n    //    }   \n\n    // REDUCER | REMOVE_FAV\n    case REMOVE_FAV:\n      const newList = state.myFavorites.filter(elemento => elemento.id !== action.payload);\n      return {\n        ...state,\n        myFavorites: newList\n      };\n    case FILTER:\n      return {\n        ...state,\n        myFavorites: state.allCharacters.filter(char => char.gender === action.payload)\n      };\n    case ORDER:\n      return {\n        ...state,\n        myFavorites: action.payload === \"A\" ? state.allCharacters.sort((a, b) => a.id - b.id) : state.allCharacters.sort((a, b) => b.id - a.id)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;\n\n/*export function mapStateToProps(state) {\r\n   return {\r\n      myFavorites: state.myFavorites,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Favorites);*/","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allCharacters","rootReducer","state","arguments","length","undefined","action","type","payload","newList","filter","elemento","id","char","gender","sort","a","b"],"sources":["E:/Nueva carpeta/A. Escritorio/Henry/FT-M/Rick_And_Morty/rick_and_morty/Client/src/redux/reducer/reducer.js"],"sourcesContent":["import {ADD_FAV, REMOVE_FAV, FILTER, ORDER} from '../actions/types'\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharacters: [],\r\n};\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // case ADD_FAV:\r\n        //    return {\r\n        //         ...state,\r\n        //         myFavorites: [...state.allCharacters, action.payload],\r\n        //         allCharacters: [...state.myFavorites, action.payload]\r\n        //    }\r\n\r\n        // REDUCER | ADD_FAV\r\n        case ADD_FAV:\r\n            return { ...state, \r\n                myFavorites: action.payload, \r\n                allCharacters: action.payload \r\n            };\r\n\r\n        // case REMOVE_FAV:\r\n        //     const newList = state.myFavorites.filter((elemento) => elemento.id !== action.payload);\r\n        //     return {\r\n        //         ...state,\r\n        //         myFavorites: newList\r\n        //    }   \r\n\r\n        // REDUCER | REMOVE_FAV\r\n        case REMOVE_FAV:\r\n            const newList = state.myFavorites.filter((elemento) => elemento.id !== action.payload);\r\n            return {\r\n                ...state,\r\n                myFavorites: newList\r\n           }\r\n\r\n        case FILTER:\r\n            return{\r\n                ...state,\r\n                myFavorites: state.allCharacters.filter((char) => char.gender === action.payload)\r\n            }\r\n\r\n        case ORDER:\r\n            return{\r\n                ...state,\r\n                myFavorites: action.payload === \"A\" ? state.allCharacters.sort((a, b) => a.id - b.id) : state.allCharacters.sort((a, b) =>  b.id - a.id)\r\n            }\r\n                            \r\n        default:\r\n           return {...state}\r\n    }\r\n};\r\n\r\nexport defaultÂ rootReducer;\r\n\r\n/*export function mapStateToProps(state) {\r\n   return {\r\n      myFavorites: state.myFavorites,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Favorites);*/\r\n"],"mappings":"AAAA,SAAQA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAEnE,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAGD,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACC,IAAI;IACf;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,KAAKb,OAAO;MACR,OAAO;QAAE,GAAGQ,KAAK;QACbH,WAAW,EAAEO,MAAM,CAACE,OAAO;QAC3BR,aAAa,EAAEM,MAAM,CAACE;MAC1B,CAAC;;IAEL;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,KAAKb,UAAU;MACX,MAAMc,OAAO,GAAGP,KAAK,CAACH,WAAW,CAACW,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC;MACtF,OAAO;QACH,GAAGN,KAAK;QACRH,WAAW,EAAEU;MAClB,CAAC;IAEJ,KAAKb,MAAM;MACP,OAAM;QACF,GAAGM,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACF,aAAa,CAACU,MAAM,CAAEG,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKR,MAAM,CAACE,OAAO;MACpF,CAAC;IAEL,KAAKX,KAAK;MACN,OAAM;QACF,GAAGK,KAAK;QACRH,WAAW,EAAEO,MAAM,CAACE,OAAO,KAAK,GAAG,GAAGN,KAAK,CAACF,aAAa,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACJ,EAAE,GAAGK,CAAC,CAACL,EAAE,CAAC,GAAGV,KAAK,CAACF,aAAa,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMA,CAAC,CAACL,EAAE,GAAGI,CAAC,CAACJ,EAAE;MAC3I,CAAC;IAEL;MACG,OAAO;QAAC,GAAGV;MAAK,CAAC;EAAA;AAE5B,CAAC;AAED,eAAeD,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}